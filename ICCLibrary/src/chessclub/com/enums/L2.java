package chessclub.com.enums;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;

import chessclub.com.icc.l2.*;
import chessclub.com.icc.l2.Error;

public enum L2 {
    WHO_AM_I(WhoAmI.class),
    PLAYER_ARRIVED(PlayerArrived.class),
    PLAYER_LEFT(Level2Packet.class),
    BULLET(UnknownPacket.class),
    BLITZ(UnknownPacket.class),
    STANDARD(UnknownPacket.class),
    WILD(UnknownPacket.class),
    BUGHOUSE(UnknownPacket.class),
    TIMESTAMP(UnknownPacket.class),
    TITLES(TitleChange.class),
    OPEN(UnknownPacket.class),
    STATE(PlayerStatePacket.class),
    GAME_STARTED(GameStarted.class),
    GAME_RESULT(GameResultPacket.class),
    EXAMINED_GAME_IS_GONE(GameNumber.class),
    MY_GAME_STARTED(GameStarted.class),
    MY_GAME_RESULT(GameResultPacket.class),
    MY_GAME_ENDED(GameNumber.class),
    STARTED_OBSERVING(GameStarted.class),
    STOP_OBSERVING(GameNumber.class),
    PLAYERS_IN_MY_GAME(UnknownPacket.class),
    OFFERS_IN_MY_GAME(OffersInMyGame.class),
    TAKEBACK(TakeBackOccurred.class),
    BACKWARD(UnknownPacket.class),
    SEND_MOVES(SendMoves.class),
    MOVE_LIST(L2MoveList.class),
    KIBITZ(UnknownPacket.class),
    PEOPLE_IN_MY_CHANNEL(PersonInMyChannel.class),
    CHANNEL_TELL(ChannelTell.class),
    MATCH(UnknownPacket.class),
    MATCH_REMOVED(UnknownPacket.class),
    PERSONAL_TELL(PersonalTell.class),
    SHOUT(Shout.class),
    MOVE_ALGEBRAIC(UnknownPacket.class),
    MOVE_SMITH(UnknownPacket.class),
    MOVE_TIME(UnknownPacket.class),
    MOVE_CLOCK(UnknownPacket.class),
    BUGHOUSE_HOLDINGS(UnknownPacket.class),
    SET_CLOCK(UnknownPacket.class),
    FLIP(UnknownPacket.class),
    ISOLATED_BOARD(UnknownPacket.class),
    REFRESH(GameNumber.class),
    ILLEGAL_MOVE(UnknownPacket.class),
    MY_RELATION_TO_GAME(UnknownPacket.class),
    PARTNERSHIP(Partnership.class),
    SEES_SHOUTS(UnknownPacket.class),
    CHANNELS_SHARED(ChannelsShared.class),
    MY_VARIABLE(MyVariable.class),
    MY_STRING_VARIABLE(MyVariable.class),
    JBOARD(UnknownPacket.class),
    SEEK(Seek.class),
    SEEK_REMOVED(SeekRemoved.class),
    MY_RATING(UnknownPacket.class),
    SOUND(UnknownPacket.class),
    UNUSED_54(UnknownPacket.class),
    PLAYER_ARRIVED_SIMPLE(Level2Packet.class),
    MSEC(Msec.class),
    BUGHOUSE_PASS(UnknownPacket.class),
    UNUSED_58(UnknownPacket.class),
    CIRCLE(UnknownPacket.class),
    ARROW(UnknownPacket.class),
    MORETIME(UnknownPacket.class),
    PERSONAL_TELL_ECHO(PersonalTellEcho.class),
    SUGGESTION(UnknownPacket.class),
    NOTIFY_ARRIVED(PlayerArrived.class),
    NOTIFY_LEFT(Level2Packet.class),
    NOTIFY_OPEN(UnknownPacket.class),
    NOTIFY_STATE(PlayerStatePacket.class),
    MY_NOTIFY_LIST(MyNotifyList.class),
    LOGIN_FAILED(LoginFailed.class),
    FEN(UnknownPacket.class),
    UNUSED_71(UnknownPacket.class),
    GAMELIST_BEGIN(GamelistBegin.class),
    GAMELIST_ITEM(GameListItem.class),
    IDLE(UnknownPacket.class),
    ACK_PING(UnknownPacket.class),
    RATING_TYPE_KEY(RatingTypeKey.class),
    GAME_MESSAGE(UnknownPacket.class),
    UNACCENTED(UnknownPacket.class),
    STRINGLIST_BEGIN(UnknownPacket.class),
    STRINGLIST_ITEM(UnknownPacket.class),
    DUMMY_RESPONSE(UnknownPacket.class),
    CHANNEL_QTELL(ChannelQTell.class),
    PERSONAL_QTELL(PersonalQTell.class),
    SET_BOARD(UnknownPacket.class),
    MATCH_ASSESSMENT(UnknownPacket.class),
    LOG_PGN(UnknownPacket.class),
    NEW_MY_RATING(MyRating.class),
    LOSERS(UnknownPacket.class),
    UNCIRCLE(UnknownPacket.class),
    UNARROW(UnknownPacket.class),
    WSUGGEST(UnknownPacket.class),
    UNUSED_92(UnknownPacket.class),
    UNUSED_93(UnknownPacket.class),
    MESSAGELIST_BEGIN(Level2Packet.class),
    MESSAGELIST_ITEM(MessageListItem.class),
    LIST(UnknownPacket.class),
    SJI_AD(UnknownPacket.class),
    UNUSED_98(UnknownPacket.class),
    QRETRACT(UnknownPacket.class),
    MY_GAME_CHANGE(UnknownPacket.class),
    POSITION_BEGIN(UnknownPacket.class),
    UNUSED_102(UnknownPacket.class),
    TOURNEY(Tourney.class),
    REMOVE_TOURNEY(Level2Packet.class),
    DIALOG_START(UnknownPacket.class),
    DIALOG_DATA(UnknownPacket.class),
    DIALOG_DEFAULT(UnknownPacket.class),
    DIALOG_END(UnknownPacket.class),
    DIALOG_RELEASE(UnknownPacket.class),
    POSITION_BEGIN2(UnknownPacket.class),
    PAST_MOVE(UnknownPacket.class),
    PGN_TAG(UnknownPacket.class),
    IS_VARIATION(UnknownPacket.class),
    PASSWORD(UnknownPacket.class),
    UNUSED_115(UnknownPacket.class),
    WILD_KEY(WildKey.class),
    UNUSED_117(UnknownPacket.class),
    UNUSED_118(UnknownPacket.class),
    KEY_VERSION(Level2Packet.class),
    SWITCH_SERVERS(UnknownPacket.class),
    CRAZYHOUSE(UnknownPacket.class),
    UNUSED_122(UnknownPacket.class),
    UNUSED_123(UnknownPacket.class),
    SET2(Set2.class),
    FIVEMINUTE(UnknownPacket.class),
    ONEMINUTE(UnknownPacket.class),
    UNUSED_127(UnknownPacket.class),
    MUGSHOT(UnknownPacket.class),
    TRANSLATION_OKAY(UnknownPacket.class),
    UNUSED_130(UnknownPacket.class),
    UID(UnknownPacket.class),
    KNOWS_FISCHER_RANDOM(UnknownPacket.class),
    UNUSED_133(UnknownPacket.class),
    WEB_AUTH(WebAuth.class),
    UNUSED_135(UnknownPacket.class),
    COMMAND(Command.class),
    TOURNEY_GAME_STARTED(TourneyGameStarted.class),
    TOURNEY_GAME_ENDED(TourneyGameEnded.class),
    MY_TURN(GameNumber.class),
    CORRESPONDENCE_RATING(UnknownPacket.class),
    DISABLE_PREMOVE(UnknownPacket.class),
    PSTAT(UnknownPacket.class),
    BOARDINFO(UnknownPacket.class),
    MOVE_LAG(UnknownPacket.class),
    FIFTEENMINUTE(UnknownPacket.class),
    UNUSED_146(UnknownPacket.class),
    UNUSED_147(UnknownPacket.class),
    UNUSED_148(UnknownPacket.class),
    THREEMINUTE(UnknownPacket.class),
    FORTYFIVEMINUTE(UnknownPacket.class),
    CHESS960(UnknownPacket.class),
    FCOUNTRY(UnknownPacket.class),
    FEATURES(UnknownPacket.class),
    ERROR(Error.class),
    DG_155(UnknownPacket.class),
    DG_156(UnknownPacket.class),
    DG_157(UnknownPacket.class),
    DG_158(UnknownPacket.class),
    DG_159(UnknownPacket.class),
    DG_160(UnknownPacket.class),
    DG_161(UnknownPacket.class),
    DG_162(UnknownPacket.class),
    DG_163(UnknownPacket.class),
    DG_164(UnknownPacket.class),
    DG_165(UnknownPacket.class),
    DG_166(UnknownPacket.class),
    DG_167(UnknownPacket.class),
    DG_168(UnknownPacket.class),
    DG_169(UnknownPacket.class),
    DG_170(UnknownPacket.class),
    DG_171(UnknownPacket.class),
    DG_172(UnknownPacket.class),
    DG_173(UnknownPacket.class),
    DG_174(UnknownPacket.class),
    DG_175(UnknownPacket.class),
    DG_176(UnknownPacket.class),
    DG_177(UnknownPacket.class),
    DG_178(UnknownPacket.class),
    DG_179(UnknownPacket.class),
    DG_180(UnknownPacket.class),
    DG_181(UnknownPacket.class),
    DG_182(UnknownPacket.class),
    DG_183(UnknownPacket.class),
    DG_184(UnknownPacket.class),
    DG_185(UnknownPacket.class),
    DG_186(UnknownPacket.class),
    DG_187(UnknownPacket.class),
    DG_188(UnknownPacket.class),
    DG_189(UnknownPacket.class),
    DG_190(UnknownPacket.class),
    DG_191(UnknownPacket.class),
    DG_192(UnknownPacket.class),
    DG_193(UnknownPacket.class),
    DG_194(UnknownPacket.class),
    DG_195(UnknownPacket.class),
    DG_196(UnknownPacket.class),
    DG_197(UnknownPacket.class),
    DG_198(UnknownPacket.class),
    DG_199(UnknownPacket.class);
    private static final Logger LOG = LogManager.getLogger(L2.class);
    private Class<?> clazz = null;

    private L2(final Class<?> clazz) {
        this.clazz = clazz;
    }

    public Level2Packet getPacketInstance() throws InstantiationException, IllegalAccessException {
        Level2Packet l2 = (Level2Packet) this.clazz.newInstance();
        if(this.clazz.equals(UnknownPacket.class))
            LOG.error("Unknown packet for l2 of "+ this);
        return l2;
    }

    public static L2 getL2(final String value) {
        return getL2(Integer.parseInt(value));
    }

    public static L2 getL2(final int value) {
        for (L2 v : L2.values()) {
            if (v.ordinal() == value) {
                return v;
            }
        }
        return null;
    }
}
