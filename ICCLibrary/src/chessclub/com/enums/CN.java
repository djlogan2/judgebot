package chessclub.com.enums;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;

import chessclub.com.icc.l1.*;

/**
 * 
 * @author David Logan
 *         <p>
 *         This is the big enumeration table for all of the level 1 packet types. Most packets are not directly handled, but handled instead through level 2. Some are handled here, and others are handled only for the potential error conditions.
 *         <p>
 *         The string after the enumeration is the subclassed Java class that will handle this packet type.
 * 
 * 
 */
public enum CN {
    S_UNKNOWN(UnknownPacket.class),
    S_ILLEGAL_MOVE(UnknownPacket.class),
    S_MOVE(UnknownPacket.class),
    S_EDIT_EXAMINED(UnknownPacket.class),
    S_UNKNOWN4(UnknownPacket.class),
    S_UNKNOWN5(UnknownPacket.class),
    S_UNKNOWN6(UnknownPacket.class),
    S_UNKNOWN7(UnknownPacket.class),
    S_UNKNOWN8(UnknownPacket.class),
    S_UNKNOWN9(UnknownPacket.class),
    S_PING_RESPONSE(UnknownPacket.class),
    S_WEIRD(UnknownPacket.class),
    S_REALLY_LOG_IN(UnknownPacket.class),
    S_MOED(UnknownPacket.class),
    S_EVENTS(SEvent.class),
    S_NEWS(UnknownPacket.class),
    S_LOGOUT(LoggedOut.class),
    S_TIMEOUT(UnknownPacket.class),
    S_CONNECT(UnknownPacket.class),
    S_REALLY_QUIT(UnknownPacket.class),
    S_LOGIN(UnknownPacket.class),
    S_PASSWORD(UnknownPacket.class),
    S_REGISTRATION(UnknownPacket.class),
    S_EXTENSION(UnknownPacket.class),
    S_AUTHENTICATION(UnknownPacket.class),
    S_BAD(BadCommand.class),
    S_AUTOMATIC(UnknownPacket.class),
    S_CONFIRM(UnknownPacket.class),
    S_MULTI_DISCARD(UnknownPacket.class),
    S_IDLE(UnknownPacket.class),
    S_ACK_PING(UnknownPacket.class),
    S_MISCELLANEOUS(L1ErrorOnly.class),
    S_UNKNOWN32(UnknownPacket.class),
    S_UNKNOWN33(UnknownPacket.class),
    S_UNKNOWN34(UnknownPacket.class),
    S_UNKNOWN35(UnknownPacket.class),
    S_UNKNOWN36(UnknownPacket.class),
    S_UNKNOWN37(UnknownPacket.class),
    S_UNKNOWN38(UnknownPacket.class),
    S_UNKNOWN39(UnknownPacket.class),
    S_UNKNOWN40(UnknownPacket.class),
    S_UNKNOWN41(UnknownPacket.class),
    S_UNKNOWN42(UnknownPacket.class),
    S_UNKNOWN43(UnknownPacket.class),
    S_UNKNOWN44(UnknownPacket.class),
    S_UNKNOWN45(UnknownPacket.class),
    S_UNKNOWN46(UnknownPacket.class),
    S_UNKNOWN47(UnknownPacket.class),
    S_UNKNOWN48(UnknownPacket.class),
    S_UNKNOWN49(UnknownPacket.class),
    S_UNKNOWN50(UnknownPacket.class),
    S_UNKNOWN51(UnknownPacket.class),
    S_UNKNOWN52(UnknownPacket.class),
    S_UNKNOWN53(UnknownPacket.class),
    S_UNKNOWN54(UnknownPacket.class),
    S_UNKNOWN55(UnknownPacket.class),
    S_UNKNOWN56(UnknownPacket.class),
    S_UNKNOWN57(UnknownPacket.class),
    S_UNKNOWN58(UnknownPacket.class),
    S_UNKNOWN59(UnknownPacket.class),
    S_UNKNOWN60(UnknownPacket.class),
    S_UNKNOWN61(UnknownPacket.class),
    S_UNKNOWN62(UnknownPacket.class),
    S_UNKNOWN63(UnknownPacket.class),
    S_UNKNOWN64(UnknownPacket.class),
    S_UNKNOWN65(UnknownPacket.class),
    S_UNKNOWN66(UnknownPacket.class),
    S_UNKNOWN67(UnknownPacket.class),
    ACCEPT0(UnknownPacket.class),
    CC_LIST0(UnknownPacket.class),
    BACK0(UnknownPacket.class),
    FORWARD0(UnknownPacket.class),
    EXAMINE0(UnknownPacket.class),
    CLEARMESSAGES0(UnknownPacket.class),
    TAKEBACK0(UnknownPacket.class),
    STORED0(UnknownPacket.class),
    BEST0(UnknownPacket.class),
    LOGONS0(UnknownPacket.class),
    QUOTA0(UnknownPacket.class),
    QUIT_PLAY(UnknownPacket.class),
    INFO0(UnknownPacket.class),
    CENSOR(UnknownPacket.class),
    CENSOR0(UnknownPacket.class),
    INCHANNEL0(UnknownPacket.class),
    ALLOBSERVERS0(UnknownPacket.class),
    GAMES0(UnknownPacket.class),
    WHISPER_TO(UnknownPacket.class),
    KIBITZ_TO(UnknownPacket.class),
    ACCESS0(UnknownPacket.class),
    VARS0(UnknownPacket.class),
    FINGER0(UnknownPacket.class),
    FIRSTMOVE_QUEUE(UnknownPacket.class),
    THREEMIN(UnknownPacket.class),
    ECO0(UnknownPacket.class),
    HISTORY0(UnknownPacket.class),
    TIME0(UnknownPacket.class),
    TELL0(UnknownPacket.class),
    PLAYERS(UnknownPacket.class),
    WHO0(UnknownPacket.class),
    TELL_DOT(UnknownPacket.class),
    XTELL(XTellResult.class),
    TELL(UnknownPacket.class),
    I(ShoutResponse.class),
    SHOUT(ShoutResponse.class),
    SHOUT0(UnknownPacket.class),
    SLASH(UnknownPacket.class),
    WHO(UnknownPacket.class),
    SET(L1ErrorOnly.class),
    FLAG(UnknownPacket.class),
    SAY(UnknownPacket.class),
    CHANNELTELL(UnknownPacket.class),
    SSHOUT(UnknownPacket.class),
    BAD(L1ErrorOnly.class),
    KIBITZ(UnknownPacket.class),
    WHISPER(UnknownPacket.class),
    EXAMINE(L1ErrorOnly.class),
    MEXAMINE(UnknownPacket.class),
    COPYGAME0(UnknownPacket.class),
    COPYGAME(UnknownPacket.class),
    FORWARD(UnknownPacket.class),
    BACK(UnknownPacket.class),
    MATCH(Play.class),
    MATCH0(UnknownPacket.class),
    ACCEPT(UnknownPacket.class),
    HELP0(UnknownPacket.class),
    HELP(UnknownPacket.class),
    MORE(UnknownPacket.class),
    NEWS(UnknownPacket.class),
    NEWS0(UnknownPacket.class),
    HISTORY(UnknownPacket.class),
    FINGER(FingerNotes.class),
    VARS(UnknownPacket.class),
    UPSTATISTICS(UnknownPacket.class),
    UNEXAMINE(UnknownPacket.class),
    ADJOURN(UnknownPacket.class),
    ASSESS(UnknownPacket.class),
    OBSERVE0(UnknownPacket.class),
    OBSERVE(UnknownPacket.class),
    FOLLOW0(UnknownPacket.class),
    FOLLOW(UnknownPacket.class),
    ECO(UnknownPacket.class),
    STYLE(UnknownPacket.class),
    BELL(UnknownPacket.class),
    OPEN(UnknownPacket.class),
    DECLINE(UnknownPacket.class),
    REFRESH(UnknownPacket.class),
    RESIGNADJ(UnknownPacket.class),
    REVERT(UnknownPacket.class),
    RATED(UnknownPacket.class),
    RANK(UnknownPacket.class),
    MOVES(UnknownPacket.class),
    MAILOLDMOVES(UnknownPacket.class),
    MAILSTORED(UnknownPacket.class),
    MAILHELP(UnknownPacket.class),
    PENDING(UnknownPacket.class),
    GAMES(UnknownPacket.class),
    ABORT(UnknownPacket.class),
    ALLOBSERVERS(UnknownPacket.class),
    INCHANNEL(UnknownPacket.class),
    INFO(UnknownPacket.class),
    MORETIME(UnknownPacket.class),
    BEST(UnknownPacket.class),
    QUIT(UnknownPacket.class),
    QUOTA(UnknownPacket.class),
    LLOGONS(UnknownPacket.class),
    LHISTORY(UnknownPacket.class),
    LOGONS(UnknownPacket.class),
    TIME(UnknownPacket.class),
    TAKEBACK(UnknownPacket.class),
    SEARCH(UnknownPacket.class),
    SEARCH0(UnknownPacket.class),
    SMOVES(UnknownPacket.class),
    SPOSITION(UnknownPacket.class),
    PASSWORD(UnknownPacket.class),
    MESSAGE(Message.class),
    MESSAGE0(UnknownPacket.class),
    CLEARMESSAGES(UnknownPacket.class),
    DATE(UnknownPacket.class),
    LIST(UnknownPacket.class),
    PLUS(ListChanged.class),
    MINUS(ListChanged.class),
    ZNOTL(UnknownPacket.class),
    FLIP(UnknownPacket.class),
    PROMOTE(UnknownPacket.class),
    EXPUNGE(UnknownPacket.class),
    IWCMATCH(UnknownPacket.class),
    LIMITS(UnknownPacket.class),
    PING(UnknownPacket.class),
    EXTEND(UnknownPacket.class),
    QTELL(UnknownPacket.class),
    GETPI(UnknownPacket.class),
    STARTSIMUL(UnknownPacket.class),
    GOTO(UnknownPacket.class),
    SETCLOCK(UnknownPacket.class),
    LIBLIST(L1ErrorOnly.class),
    LIBSAVE(UnknownPacket.class),
    LIBDELETE(UnknownPacket.class),
    LIBANNOTATE(UnknownPacket.class),
    LIBKEEPEXAM(UnknownPacket.class),
    PARTNER(UnknownPacket.class),
    PARTNER0(UnknownPacket.class),
    PTELL(UnknownPacket.class),
    BUGWHO(UnknownPacket.class),
    UNUSED203(UnknownPacket.class),
    WILDRANK(UnknownPacket.class),
    XOBSERVE(UnknownPacket.class),
    PRIMARY(UnknownPacket.class),
    DRAW(UnknownPacket.class),
    RESIGN(UnknownPacket.class),
    STATISTICS(UnknownPacket.class),
    STORED(UnknownPacket.class),
    CHANNELQTELL(UnknownPacket.class),
    XPARTNER(UnknownPacket.class),
    YFINGER(UnknownPacket.class),
    SEEKING(Seeking.class),
    SOUGHT(UnknownPacket.class),
    SET2(UnknownPacket.class),
    PLAY(Play.class),
    UNSEEKING(Unseeking.class),
    AWAY(UnknownPacket.class),
    LAGSTATS(UnknownPacket.class),
    COMMANDS(UnknownPacket.class),
    REMATCH(Play.class),
    REGISTER(Register.class),
    RESUME(UnknownPacket.class),
    CIRCLE(UnknownPacket.class),
    ARROW(UnknownPacket.class),
    BLANKING(UnknownPacket.class),
    RELAY(UnknownPacket.class),
    LOADGAME(UnknownPacket.class),
    DRAWADJ(UnknownPacket.class),
    ABORTADJ(UnknownPacket.class),
    MAILNEWS(UnknownPacket.class),
    QSET(UnknownPacket.class),
    CC_START(UnknownPacket.class),
    CC_LIST(UnknownPacket.class),
    CC_MOVE(UnknownPacket.class),
    CC_DELETE(UnknownPacket.class),
    CC_QSTART(UnknownPacket.class),
    CC_QLIST(UnknownPacket.class),
    CC_QLABEL(UnknownPacket.class),
    CC_QDELETE(UnknownPacket.class),
    CC_QADJUDICATE(UnknownPacket.class),
    CC_ASK_DIRECTOR(UnknownPacket.class),
    LOADFEN(UnknownPacket.class),
    GETPX(Getpx.class),
    UNRELAYED(Unrelayed.class),
    NORELAY(UnknownPacket.class),
    REFER(UnknownPacket.class),
    PGN(UnknownPacket.class),
    SPGN(SPgn.class),
    QFOLLOW(UnknownPacket.class),
    QUNFOLLOW(UnknownPacket.class),
    QMATCH(UnknownPacket.class),
    QPARTNER(UnknownPacket.class),
    ISREGNAME(UnknownPacket.class),
    REQUIRETICKET(UnknownPacket.class),
    ANNOTATE(UnknownPacket.class),
    CLEARBOARD(UnknownPacket.class),
    REQUEST_WIN(UnknownPacket.class),
    REQUEST_DRAW(UnknownPacket.class),
    REQUEST_ABORT(UnknownPacket.class),
    LOGPGN(UnknownPacket.class),
    RESULT(UnknownPacket.class),
    FEN(UnknownPacket.class),
    SFEN(Sfen.class),
    SETGAMEPARAM(UnknownPacket.class),
    TAG(UnknownPacket.class),
    TOMOVE(UnknownPacket.class),
    REGENTRY(UnknownPacket.class),
    PERSONALINFO(UnknownPacket.class),
    EVENTS(UnknownPacket.class),
    QADDEVENT(UnknownPacket.class),
    GLISTGROUPS(UnknownPacket.class),
    GLISTMEMBERS(UnknownPacket.class),
    GINVITE(UnknownPacket.class),
    GJOIN(UnknownPacket.class),
    GLISTINVITED(UnknownPacket.class),
    GLISTJOINING(UnknownPacket.class),
    GDESCRIBE(UnknownPacket.class),
    GKICK(UnknownPacket.class),
    GBEST(UnknownPacket.class),
    SIMULIZE(UnknownPacket.class),
    GAMEID(UnknownPacket.class),
    FIVEMINUTE(UnknownPacket.class),
    QIMPART(UnknownPacket.class),
    GMESSAGE(UnknownPacket.class),
    COMPLAIN(Complain.class),
    LASTTELLS(UnknownPacket.class),
    VIEW(UnknownPacket.class),
    SHOWADMIN(UnknownPacket.class),
    PSTAT(UnknownPacket.class),
    BOARDINFO(UnknownPacket.class),
    UNUSED293(UnknownPacket.class),
    UNUSED294(UnknownPacket.class),
    UNUSED295(UnknownPacket.class),
    UNUSED296(UnknownPacket.class),
    UNUSED297(UnknownPacket.class),
    UNUSED298(UnknownPacket.class),
    UNUSED299(UnknownPacket.class),
    ADMIN(L1ErrorOnly.class),
    ADMIN_UN(L1ErrorOnly.class),
    ADJUDICATE(GameAdjudicated.class),
    ASET(UnknownPacket.class),
    ASET0(UnknownPacket.class),
    AWHO(UnknownPacket.class),
    NUKE(UnknownPacket.class),
    LOUDSHOUT(UnknownPacket.class),
    TELLUNREG(UnknownPacket.class),
    BROADCAST(UnknownPacket.class),
    SHUTDOWN(UnknownPacket.class),
    REMGAME(UnknownPacket.class),
    ADDCOMMENT(UnknownPacket.class),
    ADDRESS(UnknownPacket.class),
    FINDADDRESS(UnknownPacket.class),
    ADDPLAYER(UnknownPacket.class),
    FORCEREGISTER(UnknownPacket.class),
    SHOW_ALL_OPEN_FDS(UnknownPacket.class),
    ALLOCS(UnknownPacket.class),
    MAILPASSWORD(ShowPassword.class),
    REHASH(UnknownPacket.class),
    REMPLAYER(UnknownPacket.class),
    KEEPGAME(UnknownPacket.class),
    EXTEND_PART(UnknownPacket.class),
    PAYMENT(UnknownPacket.class),
    BOGOMODE(UnknownPacket.class),
    COOKIE(UnknownPacket.class),
    COOKIE0(UnknownPacket.class),
    SPOOF(Spoof.class),
    DUMP(UnknownPacket.class),
    FINDIP(UnknownPacket.class),
    FINDNAME(UnknownPacket.class),
    GIVE_TICKET(UnknownPacket.class),
    TAKE_TICKET(UnknownPacket.class),
    C_PENDING(UnknownPacket.class),
    C_OFFER(UnknownPacket.class),
    C_WITHDRAW(UnknownPacket.class),
    C_HISTORY(UnknownPacket.class),
    C_ACCEPT(UnknownPacket.class),
    C_DECLINE(UnknownPacket.class),
    C_REFUND(UnknownPacket.class),
    C_ISSUE(UnknownPacket.class),
    C_PAY(UnknownPacket.class),
    C_ACCRUED(UnknownPacket.class),
    C_CLEAR(UnknownPacket.class),
    C_BUY(UnknownPacket.class),
    UNUSED346(UnknownPacket.class),
    UNUSED347(UnknownPacket.class),
    UNUSED348(UnknownPacket.class),
    UNUSED349(UnknownPacket.class),
    QSUGGEST(UnknownPacket.class),
    UNUSED351(UnknownPacket.class),
    RATING(RatingChanged.class),
    TEST(UnknownPacket.class),
    FLUSH(UnknownPacket.class),
    PDS(UnknownPacket.class),
    USCFID(UnknownPacket.class),
    FORFEITADJOURNED(UnknownPacket.class),
    ACCOUNT(UnknownPacket.class),
    SNUBBING(UnknownPacket.class),
    COMMENTGAME(UnknownPacket.class),
    R_RATING(UnknownPacket.class),
    ATELL(UnknownPacket.class),
    UNCOMMENT(UnknownPacket.class),
    WSUGGEST(UnknownPacket.class),
    QUERYUI(UnknownPacket.class),
    SJIAD(UnknownPacket.class),
    QRETRACT(UnknownPacket.class),
    SQL(UnknownPacket.class),
    PAYFAILURE(UnknownPacket.class),
    RESTRICT(UnknownPacket.class),
    SET_OTHER(UnknownPacket.class),
    DEBUG(UnknownPacket.class),
    PHRASELIST(UnknownPacket.class),
    PHRASETELL(UnknownPacket.class),
    PHRASEPTELL(UnknownPacket.class),
    PHRASESAY(UnknownPacket.class),
    CHECK_SPEAK(UnknownPacket.class),
    UNOBSERVE(UnknownPacket.class),
    UNOBSERVE0(UnknownPacket.class),
    SLASH0(UnknownPacket.class),
    RES_ADJ(UnknownPacket.class),
    OLDMOVES(UnknownPacket.class),
    UNKNOWN383(UnknownPacket.class),
    UNKNOWN384(UnknownPacket.class),
    UNKNOWN385(UnknownPacket.class),
    UNKNOWN386(UnknownPacket.class),
    UNKNOWN387(UnknownPacket.class),
    UNKNOWN388(UnknownPacket.class),
    UNKNOWN389(UnknownPacket.class),
    UNKNOWN390(UnknownPacket.class),
    UNKNOWN391(UnknownPacket.class),
    UNCENSOR(UnknownPacket.class),
    QUITPLAY(UnknownPacket.class),
    GETPS(Getps.class),
    SETCLOCK_WHITE(UnknownPacket.class),
    SETCLOCK_BLACK(UnknownPacket.class),
    SETCLOCK_WHITE_QUIET (UnknownPacket.class),
    SETCLOCK_BLACK_QUIET (UnknownPacket.class),
    LIBAPPEND(UnknownPacket.class),
    PREFRESH(UnknownPacket.class),
    XKIBITZ(UnknownPacket.class),
    XWHISPER(UnknownPacket.class),
    QCLEAR(UnknownPacket.class),
    APPEND(UnknownPacket.class),
    UNCENSOR0(UnknownPacket.class),
    FM0(UnknownPacket.class),
    FM30(UnknownPacket.class),
    POOL_P3(UnknownPacket.class),
    POOL_P45(UnknownPacket.class),
    POOL_P960(UnknownPacket.class),
    EXIT(UnknownPacket.class),
    EXIT_PLAY(UnknownPacket.class),
    CC_START_BLACK  (UnknownPacket.class),
    CC_START_WHITE (UnknownPacket.class),
    DB_MACHINE(UnknownPacket.class),
    DB_MACHINES(UnknownPacket.class),
    DB_BY_DISK(UnknownPacket.class),
    DB_BY_MACID(UnknownPacket.class),
    G45_MIN(UnknownPacket.class),
    G1_MIN(UnknownPacket.class),
    G15_MIN(UnknownPacket.class),
    POOL_P5(UnknownPacket.class), 
    POOL_P15(UnknownPacket.class),
    POOL_TUNE(UnknownPacket.class),
    G_960_JOIN(UnknownPacket.class),
    FEN0(UnknownPacket.class),
    POOL_P(UnknownPacket.class),
    DB_USERS(UnknownPacket.class),
    UNUSED429(UnknownPacket.class),
    SET_QUIET(UnknownPacket.class),
    CC_QMODIFY(UnknownPacket.class),
    UNFOLLOW(UnknownPacket.class),
    UNCIRCLE(UnknownPacket.class),
    UNARROW(UnknownPacket.class),
    SET_BLACK_NAME (UnknownPacket.class),
    SET_WHITE_NAME (UnknownPacket.class),
    REG_SUBMIT(UnknownPacket.class),
    QCHAN_MINUS(UnknownPacket.class),
    QCHAN_PLUS(UnknownPacket.class),
    QREMOVE_EVENT (UnknownPacket.class),
    RESET_RECORD(UnknownPacket.class),
    COMMA_TELL(UnknownPacket.class),
    TEST_DG(UnknownPacket.class),
    TEST_LOG(UnknownPacket.class),
    MODERATE(UnknownPacket.class),
    MODERATE0(UnknownPacket.class),
    UNMODERATE(UnknownPacket.class),
    CONSISTENCY_CHECK(UnknownPacket.class),
    MOTD(UnknownPacket.class),
    MOTD0(UnknownPacket.class),
    TITLE_NEEDED (UnknownPacket.class),
    SHOW_SPEAK(UnknownPacket.class),
    SET_CLIENTID(UnknownPacket.class),
    SET_SPEAK(UnknownPacket.class),
    REG_RESPONSE (UnknownPacket.class),
    SERVER(UnknownPacket.class),
    QSIMULIZE(UnknownPacket.class),
    LOADFEN_W(UnknownPacket.class),
    REVERSE(UnknownPacket.class),
    SHUTDOWN_STAY(UnknownPacket.class),
    SHUTDOWN_SLOW(UnknownPacket.class),
    BAD_D(UnknownPacket.class),
    ADMIN_ALREADY(UnknownPacket.class),
    RESERVE(UnknownPacket.class),
    ABORT_ADJUDICATE(UnknownPacket.class),
    UNKNOWN466(UnknownPacket.class),
    REHASH1(UnknownPacket.class),
    REHASH2(UnknownPacket.class),
    MAIL_MESSAGE(UnknownPacket.class),
    FMESSAGE(Message.class),
    GFREE(UnknownPacket.class),
    UNKNOWN472(UnknownPacket.class),
    CHANGEPASSWORD(UnknownPacket.class),
    LIST_OTHER(UnknownPacket.class),
    UNKNOWN475(UnknownPacket.class),
    CAPITALIZE(UnknownPacket.class),
    SQL_CONNECT(UnknownPacket.class),
    DUMP_ACCOUNTS(UnknownPacket.class),
    LOCATION(UnknownPacket.class),
    RATING_RECORD(UnknownPacket.class),
    PROCESS_RESULT(UnknownPacket.class),
    GUEST_IP(UnknownPacket.class),
    DEBUG_GAME(UnknownPacket.class),
    DEBUG_ANON0(UnknownPacket.class),
    DEBUG_ANON1(UnknownPacket.class),
    DEBUG_L(UnknownPacket.class),
    CLEAR_CLIENTID(UnknownPacket.class),
    SHOW_COMMANDS(UnknownPacket.class),
    SHOW_GUEST_COMMANDS(UnknownPacket.class),
    COMPLAINT_STATUS(UnknownPacket.class),
    FLUSH_PLAYERS(UnknownPacket.class),
    SHOW_PASSWORD(UnknownPacket.class),
    LOGOUT(UnknownPacket.class),
    LOGOUT_QUIET(UnknownPacket.class),
    RELAY_NOW(UnknownPacket.class),
    LOGOUT_PLAY(UnknownPacket.class),
    Z_REGISTER(UnknownPacket.class),
    PLAYER_LOAD(UnknownPacket.class),
    CONSISTANCY_CHECK(UnknownPacket.class),
    GSPEC_LOAD(UnknownPacket.class),
    GSPEC_SET_CLASS(UnknownPacket.class),
    C_TRANSFER(UnknownPacket.class),
    ORG_STATUS(UnknownPacket.class),
//    POOL_CHECKERS(UnknownPacket.class),
//    POOL_CHECKERS_SERVICE(UnknownPacket.class);
    UNKNOWN_504(UnknownPacket.class),
    UNKNOWN_505(UnknownPacket.class),
    DB_BY_CLIENTID(UnknownPacket.class),
    ZRATINGS0(UnknownPacket.class),
    ZRATINGS(UnknownPacket.class),
    LEAVEPOOL(UnknownPacket.class),
    UNKNOWN_510(UnknownPacket.class),
    UNKNOWN_511(UnknownPacket.class),
    UNKNOWN_512(UnknownPacket.class),
    UNKNOWN_513(UnknownPacket.class),
    UNKNOWN_514(UnknownPacket.class),
    UNKNOWN_515(UnknownPacket.class),
    UNKNOWN_516(UnknownPacket.class),
    JOINPOOL(UnknownPacket.class),
    UNKNOWN_518(UnknownPacket.class),
    UNKNOWN_519(UnknownPacket.class),
    UNKNOWN_520(UnknownPacket.class),
    UNKNOWN_521(UnknownPacket.class),
    UNKNOWN_522(UnknownPacket.class),
    POOL_P25(UnknownPacket.class); // 25-minute
    private static final Logger LOG = LogManager.getLogger(CN.class);
    private Class<?> clazz;

    private CN(final Class<?> clazz) {
        this.clazz = clazz;
    }

    /**
     * This returns the class name that was designed to handle the packet of the specified type. The entire unparsed packet is sent in, although this method uses only the packet number, which is the first token.
     * 
     * @param packet
     *            The packet string (i.e. <code>302\r\nThis is a packet\r\nof type level 1</code>)
     * @return The string class name that handles this packet (i.e. <code><b>CoolDataPacket</b></code>)
     * @throws Exception 
     */
    public static Level1Packet getInstance(final String packet) throws Exception {
        String[] s = packet.split("\\s+");
        String command = s[0].substring(0, 1).toUpperCase() + s[0].substring(1);
        CN cn = getCNValue(command);
        if(cn == null) {
            LOG.error("Unable to locate level 1 packet with numerical value of " + s + ", packet= " + packet);
//            throw new Exception("Unable to locate level 1 packet with numerical value of " + s + ", packet= " + packet);
            return null;
        }
        if(cn.clazz.equals(UnknownPacket.class)) {
            LOG.info("No packet found for CN value of " + cn);
            return null;
        }
        return (Level1Packet) cn.clazz.newInstance();
    }

    /**
     * This method returns the ordinal value of the enumeration. This is the numerical value assigned to this enumeration by ICC. This is also the numerical value that will come in the packet header (albeit packet headers come in as string representations
     * of numbers.)
     * <p>
     * <b><i>You cannot use <code>ENUMERATION.ordinal()</code> to get the numerical value! There is a discrepancy in the values that require use of this function!</i></b>
     * 
     * @return The numerical value of this enumeration.
     */
    public int getValue() {
            return this.ordinal();
    }

    /**
     * This method returns the CN value for the passed in integer value.
     * 
     * @param value
     *            The integer packet number
     * @return The enumerated type or <b>null</b> if there is no enumration for the value.
     */
    public static CN getCNValue(final int value) {
        for (CN v : CN.values()) {
            if (v.getValue() == value) {
                return v;
            }
        }
        return null;
    }

    /**
     * This method returns the CN value for the passed in integer value.
     * 
     * @param s
     *            The string representation of the integer packet number
     * @return The enumerated type or <b>null</b> if there is no enumration for the value.
     */
    public static CN getCNValue(final String s) {
        return getCNValue(Integer.parseInt(s));
    }

    public static boolean isUnknownPacket(int value) {
        if(getCNValue(value) == null)
            return true;
        return(UnknownPacket.class.equals(getCNValue(value).clazz));
    }
}
